package org.qcmg.qmule;

import htsjdk.samtools.SAMRecord;
import htsjdk.samtools.fastq.FastqRecord;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.qcmg.qmule.SamToFastqWithHeaders.getTrimmedBaseDetailsFromTag;

public class SamToFastqWithHeadersTest {

    @Test
    public void getPositionOfCaseChange() {
        assertEquals(-1, SamToFastqWithHeaders.getPositionOfCaseChange(null));
        assertEquals(-1, SamToFastqWithHeaders.getPositionOfCaseChange(""));
        assertEquals(0, SamToFastqWithHeaders.getPositionOfCaseChange("ACBD"));
        assertEquals(0, SamToFastqWithHeaders.getPositionOfCaseChange("abcd"));
        assertEquals(4, SamToFastqWithHeaders.getPositionOfCaseChange("abcdABCD"));
        assertEquals(4, SamToFastqWithHeaders.getPositionOfCaseChange("ABCDxyz"));
        assertEquals(1, SamToFastqWithHeaders.getPositionOfCaseChange("xYZ"));
        assertEquals(1, SamToFastqWithHeaders.getPositionOfCaseChange("Xyz"));
        assertEquals(2, SamToFastqWithHeaders.getPositionOfCaseChange("xyZ"));
        assertEquals(2, SamToFastqWithHeaders.getPositionOfCaseChange("XYz"));
    }

    @Test
    public void getTrimmedBasesFromTag() {
        assertArrayEquals(new String[]{}, getTrimmedBaseDetailsFromTag(null));
        assertArrayEquals(new String[]{}, getTrimmedBaseDetailsFromTag(""));
        assertArrayEquals(new String[]{"","","ABCD","!!!!"}, getTrimmedBaseDetailsFromTag("ABCD+!!!!"));
        assertArrayEquals(new String[]{"abcd","!!!!","",""}, getTrimmedBaseDetailsFromTag("abcd+!!!!"));
        assertArrayEquals(new String[]{"abcd","!!!!","XYZ","%%%"}, getTrimmedBaseDetailsFromTag("abcdXYZ+!!!!%%%"));
        assertArrayEquals(new String[]{"xyz","%%%","ABCD","!!!!"}, getTrimmedBaseDetailsFromTag("ABCDxyz+!!!!%%%"));
    }

    @Test
    public void getFastqFromSam() {
        SAMRecord record = new SAMRecord(null);
        record.setReadName("ERR194147.1758538");

        // first read
        record.setReadBases("AAATGAGGGAAGAAAAGAGTTAAATGCATGTTGATTCCAAGCCCCCGCCTGCCGGGGGGACAGCGGGAGGTTGGAGCACGCAGCCCTGGTGCCTGGT".getBytes());
        record.setBaseQualityString("???????????????????5???????????????????????????????????????&5?????????+??55??????????????????????");
        record.setFlags(99);
        record.setMappingQuality(60);
        record.setCigarString("97M");
        record.setInferredInsertSize(330);
        record.setAttribute("OQ", "???????????????????5???????????????????????????????????????&5?????????+??55??????????????????????");
        record.setAttribute("MQ", (Integer) 60);
        record.setAttribute("MC", "3S98M");
        record.setAttribute("ZH", "/1");
        record.setAttribute("ZT", "GCGA+???'");

        FastqRecord fq = SamToFastqWithHeaders.getFastqRecordFromSamRecord(record, 1, 0, null, null, 0, null, true, null);
        assertEquals("ERR194147.1758538/1", fq.getReadName());
        assertEquals("AAATGAGGGAAGAAAAGAGTTAAATGCATGTTGATTCCAAGCCCCCGCCTGCCGGGGGGACAGCGGGAGGTTGGAGCACGCAGCCCTGGTGCCTGGT" + "GCGA", fq.getReadString());
        assertEquals("???????????????????5???????????????????????????????????????&5?????????+??55?????????????????????????'", fq.getBaseQualityString());
    }

    @Test
    public void getFastqFromSamOQ() {
        SAMRecord record = new SAMRecord(null);
        record.setReadName("ERR194147.1758538");

        // first read
        record.setReadBases("AAATGAGGGAAGAAAAGAGTTAAATGCATGTTGATTCCAAGCCCCCGCCTGCCGGGGGGACAGCGGGAGGTTGGAGCACGCAGCCCTGGTGCCTGGT".getBytes());
        record.setBaseQualityString("???????????????????5???????????????????????????????????????&5?????????+??55??????????????????????");
        record.setFlags(99);
        record.setMappingQuality(60);
        record.setCigarString("97M");
        record.setInferredInsertSize(330);
        record.setAttribute("OQ", "55555??????????????5???????????????????????????????????????&5?????????+??55??????????????????????");
        record.setAttribute("MQ", (Integer) 60);
        record.setAttribute("MC", "3S98M");
        record.setAttribute("ZH", "/1");
        record.setAttribute("ZT", "GCGA+???'");

        FastqRecord fq = SamToFastqWithHeaders.getFastqRecordFromSamRecord(record, 1, 0, null, null, 0, null, true, null);
        assertEquals("ERR194147.1758538/1", fq.getReadName());
        assertEquals("AAATGAGGGAAGAAAAGAGTTAAATGCATGTTGATTCCAAGCCCCCGCCTGCCGGGGGGACAGCGGGAGGTTGGAGCACGCAGCCCTGGTGCCTGGT" + "GCGA", fq.getReadString());
        assertEquals("55555??????????????5???????????????????????????????????????&5?????????+??55?????????????????????????'", fq.getBaseQualityString());
    }

    @Test
    public void getFastqFromSamReverse() {
        SAMRecord record = new SAMRecord(null);
        record.setReadName("ERR194147.421820475");

        // first read
        record.setReadBases("TTCTTTGGCCTAATGACATGGCTATTAGTGCACAAGGAAATGGTCAAAAATGGGAAGAAATGTAGGTCACAAAATATTGCACAAAGCTATACTTACTT".getBytes());
        record.setBaseQualityString("??????????????????????????????????????????????????????????????????????????????????????????????????");
        record.setFlags(83);
        record.setMappingQuality(60);
        record.setCigarString("98M");
        record.setInferredInsertSize(-323);
        record.setAttribute("OQ", "??????????????????????????????????????????????????????????????????????????????????????????????????");
        record.setAttribute("MQ", (Integer) 60);
        record.setAttribute("MC", "3S98M");
        record.setAttribute("ZH", "/1");
        record.setAttribute("ZT", "CTG+???");

        FastqRecord fq = SamToFastqWithHeaders.getFastqRecordFromSamRecord(record, 1, 0, null, null, 0, null, true, null);
        assertEquals("ERR194147.421820475/1", fq.getReadName());
        assertEquals("AAGTAAGTATAGCTTTGTGCAATATTTTGTGACCTACATTTCTTCCCATTTTTGACCATTTCCTTGTGCACTAATAGCCATGTCATTAGGCCAAAGAACTG", fq.getReadString());
        assertEquals("?????????????????????????????????????????????????????????????????????????????????????????????????????", fq.getBaseQualityString());
    }
    @Test
    public void getFastqFromSamDodgyTag() {
        SAMRecord record = new SAMRecord(null);
        record.setReadName("ERR194147.1758538");

        // first read
        record.setReadBases("AAATGAGGGAAGAAAAGAGTTAAATGCATGTTGATTCCAAGCCCCCGCCTGCCGGGGGGACAGCGGGAGGTTGGAGCACGCAGCCCTGGTGCCTGGT".getBytes());
        record.setBaseQualityString("???????????????????5???????????????????????????????????????&5?????????+??55??????????????????????");
        record.setFlags(99);
        record.setMappingQuality(60);
        record.setCigarString("97M");
        record.setInferredInsertSize(330);
        record.setAttribute("OQ", "???????????????????5???????????????????????????????????????&5?????????+??55??????????????????????");
        record.setAttribute("MQ", (Integer) 60);
        record.setAttribute("MC", "3S98M");
        record.setAttribute("ZH", "/1");
        record.setAttribute("ZT", "GCGA+???'");

        FastqRecord fq = SamToFastqWithHeaders.getFastqRecordFromSamRecord(record, 1, 0, null, null, 0, null, true, null);
        assertEquals("ERR194147.1758538/1", fq.getReadName());
        assertEquals("AAATGAGGGAAGAAAAGAGTTAAATGCATGTTGATTCCAAGCCCCCGCCTGCCGGGGGGACAGCGGGAGGTTGGAGCACGCAGCCCTGGTGCCTGGT" + "GCGA", fq.getReadString());
        assertEquals("???????????????????5???????????????????????????????????????&5?????????+??55?????????????????????????'", fq.getBaseQualityString());
    }
}
