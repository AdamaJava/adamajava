import com.sun.org.apache.xalan.internal.xsltc.compiler.TestSeq;

version = '0.1pre'

def mainclass = 'org.qcmg.pileup.QPileup'
def scriptname = 'qpileup'
def isExecutable = true

//apply from:'https://github.com/breskeby/gradleplugins/raw/master/emmaPlugin/emma.gradle'
//apply from: "https://github.com/valkolovos/gradle_cobertura/raw/master/ivy/gradle_cobertura/gradle_cobertura/1.0-rc4/coberturainit.gradle"   


repositories {
    flatDir(dirs:"$projectDir/../lib")
    flatDir(dirs:"$buildDir/deps/hdf-java/lib")    
    flatDir(dirs:"$buildDir/deps/ini4j-0.5.2-SNAPSHOT")
   // mavenCentral() 
}

dependencies {
    configurations.compile.transitive = true

    compile project(':qcommon')
    compile project(':qpicard')
	compile project(':qio')
	compile project(':qbamfilter')
	
    ant {
       untar(src: "../lib/hdf-java-2.8-bin.tar", dest: "build/deps")
       unzip(src: "../lib/ini4j-0.5.2-SNAPSHOT-all.zip", dest: "build/deps")
    }

    compile name: 'jopt-simple', version: '4.6'
    compile name: 'htsjdk', version: '1.140'
    compile name: 'jhdf'
    compile name: 'jhdf5'
    compile name: 'jhdfobj'  
    compile name: 'jhdf5obj'  
    //compile name: 'postgresql', version: '9.1-901.jdbc4'
    compile name: 'ini4j', version: '0.5.2-SNAPSHOT'

	//emma "emma:emma:2.0.5312"
  	//emma "emma:emma_ant:2.0.5312"
  	 
    //testCompile project(':qtesting')
    testCompile name: 'easymock', version: '3.1'
	testCompile name: 'objenesis', version: '1.2'
	testCompile name: 'cglib-nodep', version: '2.2.3'
    testCompile name: 'junit', version: '4.10'
    
      
}


jar.doFirst {
  def classpath = configurations.runtime.collect { it.name }.join(' ')
  jar {
     manifest {
        attributes 'Implementation-Title': project.name,
                   'Implementation-Version': "$version ($svnVersion)",
                   'SVN-Version': svnVersion,
                   'Built-By': System.properties['user.name'],
                   'Date': new java.util.Date().toString(),
                   'Main-Class' : mainclass,
                   'Class-Path' : classpath
     }
  }
}

build.doLast {
    def jarname = project.name
    ant {
       echo(file: "build/flat/${scriptname}", message: "#!/bin/bash\njava -jar ${jarname}-${version}.jar \$@")
       chmod(file: "build/flat/${scriptname}", perm: "u+rwx")
    }
    copy {
       from configurations.compile
       from 'build/lib'
       into file('build/flat')
    }
}
