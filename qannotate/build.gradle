apply plugin: 'application'
mainClassName = 'au.edu.qimr.qannotate.Main'
def scriptname = 'qannotate'
def isExecutable = true

/*
* qannotate requires snpEff and the version currently used is 4.0e
* This version of the snpEff jar file embedds a version of junit that is old,
* and qannotate's test classes use some features that the bundled version does not have.
*
* This is purely an issue with the ordering of jars on the classpath that is used by the tests
* Unfortunately, the 'testCompile' elements in the 'dependencies' block will appear in the classpath after the 'compile' elements
* A workaround for this is to define a configuration that has the desired version of the jar you care about, and then to 
* setup the compile and runtime classpath with that configuration first.
*
* more details here: https://stackoverflow.com/questions/7228076/how-to-specify-classpath-ordering-in-gradle
*
*/

configurations {  junit }

dependencies {
    //this junit is required by snpEff-4.0
    junit ('junit:junit:4.10')

    implementation project(':qcommon')
    implementation project(':qio')
    implementation project(':qbamfilter')
    implementation project(':qpicard')

    implementation 'net.sf.jopt-simple:jopt-simple:4.6'
    implementation name: 'snpEff', version: '4.0e'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.6.7'
}
//have to specify test classpath for both snpEff and qannotate 
sourceSets.test.runtimeClasspath = configurations.junit + sourceSets.test.runtimeClasspath
