version = '1.0'

def mainclass = 'au.edu.qimr.indel.Main'
def scriptname = 'q3pindel'
def isExecutable = true

repositories {
	flatDir {
            dirs '/home/genomelocal/devel/adamajava/adamajava/lib'
            dirs '/home/genomelocal/devel/adamajava/adamajava/qcommon/build/lib'						
            dirs '/home/genomelocal/devel/adamajava/adamajava/qpicard/build/lib'						
            dirs '/home/genomelocal/devel/adamajava/adamajava/qio/build/lib'						
            dirs '/home/genomelocal/devel/adamajava/adamajava/adama/build/lib'						
            dirs '../lib'
	}
  mavenCentral()
}
dependencies {
    	configurations.compile.transitive = true
		
	compile name: 'qcommon', version: '0.4'
	compile name: 'qbamfilter', version: '1.2'
	compile name: 'qpicard', version: '1.1'
	compile name: 'qio', version: '0.1.1'
	
	compile name: 'htsjdk', version: '2.14.1-SNAPSHOT'
	compile name: 'picard', version: 'lib'

	copy {
		from zipTree("../lib/ini4j-0.5.2-SNAPSHOT-all.zip")
     		into 'build/deps'
        }

//	compile name: 'htsjdk', version: '1.140'	
//	compile name: 'picard', version: 'lib' 
	compile name: 'jopt-simple', version: '4.6'
        // https://mvnrepository.com/artifact/org.ini4j/ini4j
        compile group: 'org.ini4j', name: 'ini4j', version: '0.5.2'
	testCompile name: 'junit', version: '4.10'		

}

jar.doFirst {
  def classpath = configurations.runtime.collect { it.name }.join(' ')
  jar {
     manifest {
        attributes 'Implementation-Title': project.name,
                   'Implementation-Version': "$version ($svnVersion)",
                   'SVN-Version': svnVersion,
                   'Built-By': System.properties['user.name'],
                   'Date': new java.util.Date().toString(),
                   'Main-Class' : mainclass,
                   'Class-Path' : classpath
     }
  }
}

build.doLast {
 def    jarname = project.name
    ant {
       echo(file: "build/flat/${scriptname}", message: "#!/bin/bash\njava -jar ${jarname}-${version}.jar \$@")
       chmod(file: "build/flat/${scriptname}", perm: "u+rwx")
    }
    copy {
       from configurations.compile
       from 'build/lib'
       into file('build/flat')
    }
}
