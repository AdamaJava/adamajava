package au.edu.qimr.clinvar;

import static org.junit.Assert.assertEquals;
import htsjdk.samtools.util.SequenceUtil;

import org.apache.commons.lang3.StringUtils;
import org.junit.Test;

import au.edu.qimr.clinvar.util.ClinVarUtil;

public class ClinVarTest {
	
	
	/* probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:48.714 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:48.750 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: TCTGTAGACCTCGAAGTAGGGGGAAAA, basicED: 18, led: 2
15:07:48.773 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGCCCTCGAAGAAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 2, led: 2
15:07:48.798 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:48.815 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:48.874 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCGCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCGCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:48.882 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.019 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: GTAGACCTCGAAGTAGGGGGAAAACTG, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 19, led: 4
15:07:49.057 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TTTTAAACCTTGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 4, led: 4
15:07:49.077 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TCTGTAGACCTCGAAGTAGGGGGAAAA, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 18, led: 2
15:07:49.143 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.151 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.186 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.221 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TCTGTAGACCTCGAAGTAGGGGGAAAA, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 18, led: 2
15:07:49.294 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TGTAGACCTTGAAGTAGGGGGAAAACT, r1OverlapRC: CTGTAGACCTTGAAGTAGGGGGAAAAC, basicED: 17, led: 2
15:07:49.316 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TAGACCTCGAAGTAGGGGGAAAACTGC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 18, led: 6
15:07:49.373 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.388 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.417 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.431 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TGTAGACCTCGAAGTAGGGGGAAAACT, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 18, led: 2
15:07:49.444 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: GTAAGACTCGGAGGAGGGGGAAAAATT, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 19, led: 9
15:07:49.455 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.509 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TTGTAGACCTCGAGGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 2, led: 2
15:07:49.556 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TCTGTAGACCTCGAAGTAGGGGGAAAA, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 18, led: 2
15:07:49.560 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: TCTGTAGACCTCGAAGTAGGGGGAAAA, basicED: 18, led: 2
15:07:49.584 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: GTAGACCTCGAAGTAGGGGGAAAACTG, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 19, led: 4
15:07:49.585 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.588 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TGTTGACCTCGAAGTAGGGGGAAAACT, r1OverlapRC: CTGTTGACCTCGAAGTAGGGGGAAAAC, basicED: 17, led: 2
15:07:49.646 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.719 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.743 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: CTGTAGACCTCGAAGTAGGGGGAAAAC, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 0, led: 0
15:07:49.779 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: GTAGACCTCGAAGTAGGGGGAAAACTG, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 19, led: 4
15:07:49.795 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TCTGTAGCCCTCGAAGTAGGGGGAAAA, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 17, led: 3
15:07:49.801 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: TCTGTAGACCTCGAAGTAGGGGGAAAA, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 18, led: 2
15:07:49.818 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - probe 593, r2Overlap: GTAGACCTCGAAGTAGGGGGAAAACTG, r1OverlapRC: CTGTAGACCTCGAAGTAGGGGGAAAAC, basicED: 19, led: 4
*/
	
	
	@Test
	public void doesSlidingWork() {
		//slide value = expectedOverlap: 31, r1: GTCCCCGGCCAGCCATGGGCCCTTGGAGCCGCAGCCTCTCGGCGCTGCTGCTGCTGCTGCAGGTACCTCGGATCCCCTGACTTGCGAGGGGCGCATTCGGGCCGCAAGCTCCGCGCCCCAGCCCCGTGCCCCAGCCCTGCGCCCCTTCCTC r2: AAAGCCGCGCTCGCCCCTCACCACCCACGCCCCACTCCCATCACTGGGGGGTCCGGAGCGCGCGAGGCTTCCAGGCCGCTCCGCTCCTCAGGACCCGAACTTTCTTGGAAGAAGGGAAGCGGTGACGACGGGAGAGGAAGGGGCGCAGGGC
		String r1 = "GTCCCCGGCCAGCCATGGGCCCTTGGAGCCGCAGCCTCTCGGCGCTGCTGCTGCTGCTGCAGGTACCTCGGATCCCCTGACTTGCGAGGGGCGCATTCGGGCCGCAAGCTCCGCGCCCCAGCCCCGTGCCCCAGCCCTGCGCCCCTTCCTC";
		String r2 = "AAAGCCGCGCTCGCCCCTCACCACCCACGCCCCACTCCCATCACTGGGGGGTCCGGAGCGCGCGAGGCTTCCAGGCCGCTCCGCTCCTCAGGACCCGAACTTTCTTGGAAGAAGGGAAGCGGTGACGACGGGAGAGGAAGGGGCGCAGGGC";
		
		int expectedOverlap = 31;
		String r1Overlap = r1.substring(r1.length() - expectedOverlap);
		String r2Overlap = r2.substring(r2.length() - expectedOverlap);
		String r2OverlapRC = SequenceUtil.reverseComplement(r2Overlap);
		
		System.out.println("r1Overlap: " + r1Overlap);
		System.out.println("r2OverlapRC: " + r2OverlapRC);
		
		
		//- slide value = expectedOverlap: 29, r1: AACTTTTTGTAGAAATGGGGTCTTGCTTTGTTGCCCAGGCTGGTCTAAAAAAATATACTACTTTTATGGATCACACTGCTAAACACTAATATAACCTTTGGAAATATAAATCTATATACTTCCTTACCTGGGATTGGAACAAGGTACTCTT r2: GTGTGTGCATATGTGTATGTTGAGTGTATACATTAGTATATACATACTTTTTCTTTTAGACCTATGTTCGAACAGGTATCTACCATGGAGGAGAACCCTTATGTGACAATGTGAACACTCAAAGAGTACCTTGTTCCAATCCCAGGTAAGG
		//09:38:45.113 [main] INFO au.edu.qimr.clinvar.util.FastqProbeMatchUtil - attempting to create a fragment with slideValue: 1
		r1 = "AACTTTTTGTAGAAATGGGGTCTTGCTTTGTTGCCCAGGCTGGTCTAAAAAAATATACTACTTTTATGGATCACACTGCTAAACACTAATATAACCTTTGGAAATATAAATCTATATACTTCCTTACCTGGGATTGGAACAAGGTACTCTT";
		r2 = "GTGTGTGCATATGTGTATGTTGAGTGTATACATTAGTATATACATACTTTTTCTTTTAGACCTATGTTCGAACAGGTATCTACCATGGAGGAGAACCCTTATGTGACAATGTGAACACTCAAAGAGTACCTTGTTCCAATCCCAGGTAAGG";
		
		expectedOverlap = 29;
		r1Overlap = r1.substring(r1.length() - expectedOverlap);
		r2Overlap = r2.substring(r2.length() - expectedOverlap);
		r2OverlapRC = SequenceUtil.reverseComplement(r2Overlap);
		
		System.out.println("r1Overlap: " + r1Overlap);
		System.out.println("r2OverlapRC: " + r2OverlapRC);
		
	}
	
	/*
	 * TCTTACTGTGAGAAATAACATGTCAACCCTAAGATAAAATATGTTGAGGTTTCATGGAAATAGTGCCTTTCCTTAGTACTTTTGTGGGTGTCACTTGGCCTTTTTGTCAAGATAGATTACACCTGCCAGACCTCATTATTGTCTTAATCCTCCTTCCCATGACTTCTCACTGCCTAGGTGGTCACACAGTAGATTCCTGCTTCTTCTCCTCGGGAACCCCAAGTCTCTTGACAGGGGTAAATGCAGAGTGTTCAGGGTTAGACTAATGATGTGACTAGGCCCTGCTGGTGTGCCTGTCTGATGGAAATAGATGTTATTTGTGTAGTCTCATGGGTGGCCTGGCACTGAGTAATTACTTGGCTAAAGAAAGCTGGAGGTTGAAGAGGCTAGAAAGCGTTGTTTTCTGACAAGTTTGCTGCTGAACTTTGGATGCCCTAACCTCAGTGTTAACGTCTATGTCTGCTTCTCTCCTCTCTCTTTTGCCTTCCTTCTTGCCTATTTTGTTGACACCCTGACTCTTCTAGATCCTAGCTATCGTTCTTTTCACTCTGGTGGATATGGCCAGGATGCCTTGGGTATGGACCCCATGATGGAACATGAGATGGGTGGCCACCACCCTGGTGCTGACTATCCAGTTGATGGGCTGCCAGATCTGGGGCATGCCCAGGACCTCATGGATGGGCTGCCTCCAGGTGACAGCAATCAGCTGGCCTGGTTTGATACTGACCTGTAAATCATCCTTTAGGTAAGAAGTTTTAAAAAGCCAGTTTGGGTAAAATACTTTTACTCTGCCTACAGAACTTCAGAAAGACTTGGTTGGTAGGGTGGGAGTGGTTTAGGCTATTTGTAAATCTGCCACAAAAACAGGTATATACTTTGAAAGGAGATGTCTTGGAACATTGGAATGTTCTCAGATTTCTGGTTGTTATGTGATCATGTGTGGAAGTTATTAACTTTAATGTTTTTTGCCACAGCTTTTGCAACTTAATACTCAAATGAGTAACATTTGCTGTTTTAAACATTAATAGCAGCCTTTCTCTCTTTATACAGCTGTATTGTCTGAACTTGCATTGTGATTGGCCTGTAGAGTTGCTGAGAGGGCTCGAGGGGTGGGCTGGTATCTCAGAAAGTGCCTGACACACTAACCAAGCTGAGTTTCCTATGGGAACAATTGAAGTAAACTTTTTGTTCTGGTCCTTTTTGGTCGAGGAGTAACAATACAAATGGATTTTGGGAGTGACTCAAGAAGTGAAGAATGCACAAGAATGGATCACAAGATGGAATTTATCAAACCCTAGCCTTGCTTGTTAAATTTTTTTTTTTTTTTTTTTAAGAATATCTGTAATGGTACTGACTTTGCTTGCTTTGAAGTAGCTCTTTTTTTTTTTTTTTTTTTTTTTTTGCAGTAACTGTTTTTTAAGTCTCTCGTAGTGTTAAGTTATAGTGAATACTGCTACAGCAATTTCTAATTTTTAAGAATTGAGTAATGGTGTAGAACACTAATTCATAATCACTCTAATTAATTGTAATCTGAATAAAGTGTAACAATTGTGTAGCCTTTTTGTATAAAATAGACAAATAGAAAATGGTCCAATTAGTTTCCTTTTTAATATGCTTAAAATAAGCAGGTGGATCTATTTCATGTTTTTGATCAAAAACTATTTGGGATATGTATGGGTAGGGTAAATCAGTAAGAGGTGTTATTTGGAACCTTGTTTTGGACAGTTTACCAGTTGCCTTTTATCCCAAAGTTGTTGTAACCTGCTGTGATACGATGCTTCAAGAGAAAATGCGGTTATAAAAAATGGTTCAGAATTAAACTTTTAATTCATTCGATTGTGTCACTCTTTCTTTTTTTCTTGTCATTAATAAATGGTTTGTGAGGGTGGTAAGTAAGTTTATCCAACTCAACTTTATCCTGAACTTTATCCTGAGATAGATAGATACATAGTGAAGTAATTTGTTGTAGCGATAGAGAGGGCCCTACTTCTCTAGATGCAATTTGCCAAGTTTCTTTAGCATTTGGCCCTGGATTACGCTGGACCCCTAAAAAAGTGTTTCAGCCTTGCACATTGTGATTAGTTCTGGGCTTTGGTGGGAGAAAGCCAAGCAGACTATCCATCTATCTATCTCTACCCCAATCCCCCTCAGATGATTTGATTCCATTAAAGTAATGAAATAAATAGTAACTACCCCTACCTGGATTTGGATTTGAATCACCTTCACCCAAGTGTGACTCATTGGGAGAGGGGAATTCCTTCAACTGGACTTTGAACTAATAATAATTAAATAAATTAAATAGGTTTAAGTGTTGATGTTTATCTGAACATAATCAGAACCAGAATGAGCCTTCCACAGTACCTG
	 * 
	 * 
	 * 12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCATGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGCTTAATTCTGAACCATTTTTTACAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGAGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTGTCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCTCAAACCATTTATTAATGACATGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATCTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTAACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAGTGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCTTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAGGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGATGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCAAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACTCGATCGAATGAATTAAAAGTTTAATTCTGGACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCCGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 2
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAGTCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTAATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTTACGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 63
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAGCCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATGAAAAGTTTAATTCTGAACCATTTTTAATAACCACATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTGAAGGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAGGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAGAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCATCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGCATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACAGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATCTTTAATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCACTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTCTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTTAGGATAAAGTTGGGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGGTAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGATACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTAATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCACCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 2
12:19:09.106 [main] INFO au.edu.qimr.clinvar.Q3ClinVar - frag: GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAATGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA, count: 1
	 * 
	 */
	@Test
	public void doesStringContainSubsequence() {
		String sequence = SequenceUtil.reverseComplement("TCTTACTGTGAGAAATAACATGTCAACCCTAAGATAAAATATGTTGAGGTTTCATGGAAATAGTGCCTTTCCTTAGTACTTTTGTGGGTGTCACTTGGCCTTTTTGTCAAGATAGATTACACCTGCCAGACCTCATTATTGTCTTAATCCTCCTTCCCATGACTTCTCACTGCCTAGGTGGTCACACAGTAGATTCCTGCTTCTTCTCCTCGGGAACCCCAAGTCTCTTGACAGGGGTAAATGCAGAGTGTTCAGGGTTAGACTAATGATGTGACTAGGCCCTGCTGGTGTGCCTGTCTGATGGAAATAGATGTTATTTGTGTAGTCTCATGGGTGGCCTGGCACTGAGTAATTACTTGGCTAAAGAAAGCTGGAGGTTGAAGAGGCTAGAAAGCGTTGTTTTCTGACAAGTTTGCTGCTGAACTTTGGATGCCCTAACCTCAGTGTTAACGTCTATGTCTGCTTCTCTCCTCTCTCTTTTGCCTTCCTTCTTGCCTATTTTGTTGACACCCTGACTCTTCTAGATCCTAGCTATCGTTCTTTTCACTCTGGTGGATATGGCCAGGATGCCTTGGGTATGGACCCCATGATGGAACATGAGATGGGTGGCCACCACCCTGGTGCTGACTATCCAGTTGATGGGCTGCCAGATCTGGGGCATGCCCAGGACCTCATGGATGGGCTGCCTCCAGGTGACAGCAATCAGCTGGCCTGGTTTGATACTGACCTGTAAATCATCCTTTAGGTAAGAAGTTTTAAAAAGCCAGTTTGGGTAAAATACTTTTACTCTGCCTACAGAACTTCAGAAAGACTTGGTTGGTAGGGTGGGAGTGGTTTAGGCTATTTGTAAATCTGCCACAAAAACAGGTATATACTTTGAAAGGAGATGTCTTGGAACATTGGAATGTTCTCAGATTTCTGGTTGTTATGTGATCATGTGTGGAAGTTATTAACTTTAATGTTTTTTGCCACAGCTTTTGCAACTTAATACTCAAATGAGTAACATTTGCTGTTTTAAACATTAATAGCAGCCTTTCTCTCTTTATACAGCTGTATTGTCTGAACTTGCATTGTGATTGGCCTGTAGAGTTGCTGAGAGGGCTCGAGGGGTGGGCTGGTATCTCAGAAAGTGCCTGACACACTAACCAAGCTGAGTTTCCTATGGGAACAATTGAAGTAAACTTTTTGTTCTGGTCCTTTTTGGTCGAGGAGTAACAATACAAATGGATTTTGGGAGTGACTCAAGAAGTGAAGAATGCACAAGAATGGATCACAAGATGGAATTTATCAAACCCTAGCCTTGCTTGTTAAATTTTTTTTTTTTTTTTTTTAAGAATATCTGTAATGGTACTGACTTTGCTTGCTTTGAAGTAGCTCTTTTTTTTTTTTTTTTTTTTTTTTTGCAGTAACTGTTTTTTAAGTCTCTCGTAGTGTTAAGTTATAGTGAATACTGCTACAGCAATTTCTAATTTTTAAGAATTGAGTAATGGTGTAGAACACTAATTCATAATCACTCTAATTAATTGTAATCTGAATAAAGTGTAACAATTGTGTAGCCTTTTTGTATAAAATAGACAAATAGAAAATGGTCCAATTAGTTTCCTTTTTAATATGCTTAAAATAAGCAGGTGGATCTATTTCATGTTTTTGATCAAAAACTATTTGGGATATGTATGGGTAGGGTAAATCAGTAAGAGGTGTTATTTGGAACCTTGTTTTGGACAGTTTACCAGTTGCCTTTTATCCCAAAGTTGTTGTAACCTGCTGTGATACGATGCTTCAAGAGAAAATGCGGTTATAAAAAATGGTTCAGAATTAAACTTTTAATTCATTCGATTGTGTCACTCTTTCTTTTTTTCTTGTCATTAATAAATGGTTTGTGAGGGTGGTAAGTAAGTTTATCCAACTCAACTTTATCCTGAACTTTATCCTGAGATAGATAGATACATAGTGAAGTAATTTGTTGTAGCGATAGAGAGGGCCCTACTTCTCTAGATGCAATTTGCCAAGTTTCTTTAGCATTTGGCCCTGGATTACGCTGGACCCCTAAAAAAGTGTTTCAGCCTTGCACATTGTGATTAGTTCTGGGCTTTGGTGGGAGAAAGCCAAGCAGACTATCCATCTATCTATCTCTACCCCAATCCCCCTCAGATGATTTGATTCCATTAAAGTAATGAAATAAATAGTAACTACCCCTACCTGGATTTGGATTTGAATCACCTTCACCCAAGTGTGACTCATTGGGAGAGGGGAATTCCTTCAACTGGACTTTGAACTAATAATAATTAAATAAATTAAATAGGTTTAAGTGTTGATGTTTATCTGAACATAATCAGAACCAGAATGAGCCTTCCACAGTACCTG");
		String subSeq = "GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCATGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA";
		assertEquals(false, sequence.contains(subSeq));
		subSeq = "GCTACAACAAATTACTTCACTATGTATCTATCTATCTCAGGATAAAGTTCAGGATAAAGTTGAGTTGGATAAACTTACTTACCACCCTCACAAACCATTTATTAATGACAAGAAAAAAAGAAAGAGTGACACAATCGAATGAATTAAAAGTTTAATTCTGAACCATTTTTTATAACCGCATTTTCTCTTGAAGCATCGTATCACAGCAGGTTACAACAACTTTGGGATAA";
		assertEquals(true, sequence.contains(subSeq));
	}
	
	@Test
	public void testRHSSlide() {
		/*
		 * slide value: -1 expected value: 31, r1: AGTCTGCAGGGGCAGGGAAGAGGAGACATACATAAAACAAGGATTTAGCATAACAAACGGGATCTTAGGACCCCTGCCAGGCTGAAATCTTCCCCAACCGCAGGGTACCACGCTTGTACCGAGCCCACCTCCTTGGAGTACCCCCTGGGTA r2: TACTCAGGTAGGCTAGGGTTCAAGGTATGAATGATCCTCAGATGGTGAGGGTGGGGGGGGCCCTTTGGCAACTGAGGAGCAATTTGGATTCTCCAGAAGATAACATCTGTGGAGCGAAACGTACCCAGGGGGTACTCCAAGGAGGTGGGCT
		 */
		int expectedOverlap = 31;
		String r1 = "AGTCTGCAGGGGCAGGGAAGAGGAGACATACATAAAACAAGGATTTAGCATAACAAACGGGATCTTAGGACCCCTGCCAGGCTGAAATCTTCCCCAACCGCAGGGTACCACGCTTGTACCGAGCCCACCTCCTTGGAGTACCCCCTGGGTA";
		String r2 = "TACTCAGGTAGGCTAGGGTTCAAGGTATGAATGATCCTCAGATGGTGAGGGTGGGGGGGGCCCTTTGGCAACTGAGGAGCAATTTGGATTCTCCAGAAGATAACATCTGTGGAGCGAAACGTACCCAGGGGGTACTCCAAGGAGGTGGGCT";
		
		String r1Overlap = r1.substring(r1.length() - expectedOverlap);
		String r2Overlap = r2.substring(r2.length() - expectedOverlap);
		String r2OverlapRC = SequenceUtil.reverseComplement(r2Overlap);
		
		System.out.println("r1: " + r1);
		System.out.println("r2RC: " + SequenceUtil.reverseComplement(r2));
		System.out.println("r1Overlap: " + r1Overlap);
		System.out.println("r2OverlapRC: " + r2OverlapRC);
		
		assertEquals(-1, ClinVarUtil.noOfSlidesToGetPerfectMatch(r1Overlap, r2OverlapRC));
//		String frag =  "---" + r1.substring(0, r1.length() - Math.abs(-1)) + SequenceUtil.reverseComplement(r2.substring(0,r2.length() - expectedOverlap - Math.abs(-1)));
		String frag =  r1 + SequenceUtil.reverseComplement(r2.substring(0,r2.length() - (expectedOverlap - Math.abs(-1))));
		System.out.println("frag: " + frag);
	}
	
	@Test
	public void testRHSSlideLarge() {
		/*
		 *  slide value: -13 expected value: 31, r1: GTCCCCGGCCAGCCATGGGCCCTTGGAGCCGCAGCCTCTCGGCGCTGCTGCTGCTGCTGCAGGTACCTCGGATCCCCTGACTTGCGAGGGACGCATTCGGGCCGCAAGCTCCGCGCCCCAGCCCCGTGCCCCAGCCCTGCGCCCCTTCCTC r2: AAAGCCGCGCTCGCCCCTCACCACCCACGCCCCACTCCCATCACTGGGGGGTCCGGAGCGCGCGAGGCTTCCAGGCCGCTCCGCTCCTCAGGACCCGAACTTTCTTGGAAGAAGGGAAGCGGTGACGACGGGAGAGGAAGGGGCGCAGGGC
		 */
		int expectedOverlap = 31;
		String r1 = "GTCCCCGGCCAGCCATGGGCCCTTGGAGCCGCAGCCTCTCGGCGCTGCTGCTGCTGCTGCAGGTACCTCGGATCCCCTGACTTGCGAGGGACGCATTCGGGCCGCAAGCTCCGCGCCCCAGCCCCGTGCCCCAGCCCTGCGCCCCTTCCTC";
		String r2 = "AAAGCCGCGCTCGCCCCTCACCACCCACGCCCCACTCCCATCACTGGGGGGTCCGGAGCGCGCGAGGCTTCCAGGCCGCTCCGCTCCTCAGGACCCGAACTTTCTTGGAAGAAGGGAAGCGGTGACGACGGGAGAGGAAGGGGCGCAGGGC";
		int slideValue = -13;
		String r1Overlap = r1.substring(r1.length() - expectedOverlap);
		String r2Overlap = r2.substring(r2.length() - expectedOverlap);
		String r2OverlapRC = SequenceUtil.reverseComplement(r2Overlap);
		
		System.out.println("r1: " + r1);
		System.out.println("r2RC: " + SequenceUtil.reverseComplement(r2));
		System.out.println("r1Overlap: " + r1Overlap);
		System.out.println("r2OverlapRC: " + r2OverlapRC);
		
		assertEquals(slideValue, ClinVarUtil.noOfSlidesToGetPerfectMatch(r1Overlap, r2OverlapRC));
		String frag =   r1 + SequenceUtil.reverseComplement(r2.substring(0,r2.length() - (expectedOverlap - Math.abs(slideValue))));
		System.out.println(slideValue + " frag: " + frag);
		frag =   r1.substring(0,  r1.length() - (expectedOverlap + slideValue)) + SequenceUtil.reverseComplement(r2);
		System.out.println("new frag: " + frag);
	}
	
	@Test
	public void testRHSSlideLarger() {
		/*
		 *  slide value: 32 expected value: 66, r1: AAAAATTCAATGCTGACACAAATAAGGTTTCAATTAAACAACTTCTTTTTTTTTTTTTAAATTATCTGTTTCAGGAAGAAGAACGATTATCCATTCAAAATTTTTTTCTTTTTATAGAAGTAAGTATTTTATAATCTTTTTTTTTTTCCTT r2: GAGCGCACGCCAATAAAGACATATGAAAAATGTTGTCATTCAGAAGTTTGCTAAAGGAAAAAAAAAAAGATTATAAAATACTTACTTCTATAAAAAGAAAAAAATTTTGAATGGATAATCGTTCTTCTTCCTGAAACAGATAATTTAAAAA

		 */
		int expectedOverlap = 66;
		int slideValue = 32;
		String r1 = "AAAAATTCAATGCTGACACAAATAAGGTTTCAATTAAACAACTTCTTTTTTTTTTTTTAAATTATCTGTTTCAGGAAGAAGAACGATTATCCATTCAAAATTTTTTTCTTTTTATAGAAGTAAGTATTTTATAATCTTTTTTTTTTTCCTT";
		String r2 = "GAGCGCACGCCAATAAAGACATATGAAAAATGTTGTCATTCAGAAGTTTGCTAAAGGAAAAAAAAAAAGATTATAAAATACTTACTTCTATAAAAAGAAAAAAATTTTGAATGGATAATCGTTCTTCTTCCTGAAACAGATAATTTAAAAA";
		String r1Overlap = r1.substring(r1.length() - expectedOverlap);
		String r2Overlap = r2.substring(r2.length() - expectedOverlap);
		String r2OverlapRC = SequenceUtil.reverseComplement(r2Overlap);
		
		System.out.println("r1: " + r1);
		System.out.println("r2RC: " + SequenceUtil.reverseComplement(r2));
		System.out.println("r1Overlap: " + r1Overlap);
		System.out.println("r2OverlapRC: " + r2OverlapRC);
		
		assertEquals(slideValue, ClinVarUtil.noOfSlidesToGetPerfectMatch(r1Overlap, r2OverlapRC));
		String frag =   r1.substring(0,  r1.length() - expectedOverlap - slideValue) + SequenceUtil.reverseComplement(r2);
		System.out.println(slideValue + " frag: " + frag);
		System.out.println(slideValue + " frag prependIfMissing: " + StringUtils.prependIfMissing(SequenceUtil.reverseComplement(r2), r1));
	}
	
	@Test
	public void testLHSSlide() {
		/*
		 *  - slide value: 1 expected value: 27, r1: GGGTCCTGGTATGGGGAACGCCATTTTCATTAACTAGAAAATCAAAACACATTTACCTGGAATTTTATATAATTTTCCAAGAATTGCTCCTAGAATAAATTAAAAAAAAAAAGAAACATTAACAGCTACTAATTCAATATACTGATATAAA r2: CACAGATGGTAAAATATTTGCCCTACATCTAGGCTTTCTAAAAGACCTGAGTAAATATGATTTTTAAAGATTTTTGCATGGTTATAATTTAACTTCTAATTATTTCTGTCAGTTAAATACTATTTTATATCAGTATATTGAATTAGTAGCT
		 */
		int expectedOverlap = 27;
		String r1 = "GGGTCCTGGTATGGGGAACGCCATTTTCATTAACTAGAAAATCAAAACACATTTACCTGGAATTTTATATAATTTTCCAAGAATTGCTCCTAGAATAAATTAAAAAAAAAAAGAAACATTAACAGCTACTAATTCAATATACTGATATAAA";
		String r2 = "CACAGATGGTAAAATATTTGCCCTACATCTAGGCTTTCTAAAAGACCTGAGTAAATATGATTTTTAAAGATTTTTGCATGGTTATAATTTAACTTCTAATTATTTCTGTCAGTTAAATACTATTTTATATCAGTATATTGAATTAGTAGCT";
		
		String r1Overlap = r1.substring(r1.length() - expectedOverlap);
		String r2Overlap = r2.substring(r2.length() - expectedOverlap);
		String r2OverlapRC = SequenceUtil.reverseComplement(r2Overlap);
		
		System.out.println("r1: " + r1);
		System.out.println("r2RC: " + SequenceUtil.reverseComplement(r2));
		System.out.println("r1Overlap: " + r1Overlap);
		System.out.println("r2OverlapRC: " + r2OverlapRC);
		
		int slideValue = ClinVarUtil.noOfSlidesToGetPerfectMatch(r1Overlap, r2OverlapRC);
		assertEquals(1, slideValue);
//		String frag =   r1.substring(0, r1.length() - slideValue) + SequenceUtil.reverseComplement(r2.substring(0,r2.length() - expectedOverlap - slideValue));
		String frag =   r1.substring(0,  r1.length() - expectedOverlap - slideValue) + SequenceUtil.reverseComplement(r2);
		System.out.println("frag: " + frag);
		frag =   r1.substring(0,  r1.length() - (expectedOverlap + slideValue)) + SequenceUtil.reverseComplement(r2);
		System.out.println("new frag: " + frag);
		
		
	}
	
	@Test
	public void testLHSSlideNoMatch() {
		/*
		 * CTCCATCAGGTTCATCACCTCCATCGTGGCTACTGGGGGCACAAAGGAGGAAGTCAGGAAGCAGGAAGTCACCTGGCCCAGCCCCCAGCTTCAGCCCGTCACCAAGCCCCGCCTGTCTTCCCACATCATCACCATGGCCCAGGGATTTCAA, r2: ATCTCGTCGTGGGCAGCCCCTCCCTGGGCCTGGTGCCCTTCTGGGCAGTCCCCCCATCCCCAGCCTGCATCCTCATTGAAATCCCTGGGCCATGGTGATGATGTGGGAAGACAGGCGGGGGCTGGTGGAGGGGTGGAGCTGGGGGGTGGGG
		 * CTCCATCAGGTTCATCACCTCCATCGTGGCTACTGGGGGCACAAAGGAGGAAGTCAGGAAGCAGGAAGTCACCTGGCCCAGCCCCCAGCTTCAGCCCGTCACCAAGCCCCGCCTGTCTTCCCACATCATCACCATGGCCCAGGGATTTCAA, r2: ATCTCGTCGTGGGCAGCCCCTCCCTGGGCCTGGTGCCCTTCTGGGCAGTCCCCCCATCCCCAGCCTGCATCCTCATTGAAATCCCTGGGCCATGGTGATGATGTGGGAAGACAGGCGGGGCTTGGTGGCGGGCGGAAGCTGGGGGGGGGGG
		 */
		int expectedOverlap = 69;
		String r1 = "CTCCATCAGGTTCATCACCTCCATCGTGGCTACTGGGGGCACAAAGGAGGAAGTCAGGAAGCAGGAAGTCACCTGGCCCAGCCCCCAGCTTCAGCCCGTCACCAAGCCCCGCCTGTCTTCCCACATCATCACCATGGCCCAGGGATTTCAA";
		String r2 = "ATCTCGTCGTGGGCAGCCCCTCCCTGGGCCTGGTGCCCTTCTGGGCAGTCCCCCCATCCCCAGCCTGCATCCTCATTGAAATCCCTGGGCCATGGTGATGATGTGGGAAGACAGGCGGGGGCTGGTGGAGGGGTGGAGCTGGGGGGTGGGG";
		
		String r1Overlap = r1.substring(r1.length() - expectedOverlap);
		String r2Overlap = r2.substring(r2.length() - expectedOverlap);
		String r2OverlapRC = SequenceUtil.reverseComplement(r2Overlap);
		
		System.out.println("r1: " + r1);
		System.out.println("r2RC: " + SequenceUtil.reverseComplement(r2));
		System.out.println("r1Overlap: " + r1Overlap);
		System.out.println("r2OverlapRC: " + r2OverlapRC);
		
		int slideValue = ClinVarUtil.noOfSlidesToGetPerfectMatch(r1Overlap, r2OverlapRC);
		assertEquals(expectedOverlap, Math.abs(slideValue));
//		String frag =   r1.substring(0, r1.length() - slideValue) + SequenceUtil.reverseComplement(r2.substring(0,r2.length() - expectedOverlap - slideValue));
		String frag =  r1.substring(0,  r1.length() - (expectedOverlap + slideValue)) + SequenceUtil.reverseComplement(r2);
		System.out.println("frag: " + frag);
		
		
	}
	
	
	
}
