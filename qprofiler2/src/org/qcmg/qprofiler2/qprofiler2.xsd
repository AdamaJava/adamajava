<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- simpleTypes -->
<xs:simpleType name="nonEmptyString">
	<xs:restriction base="xs:string">
		<xs:minLength value="1"/>
	</xs:restriction>
</xs:simpleType>

<xs:simpleType name="percent">
	<xs:restriction base="xs:float">
		<xs:minInclusive value="0.0"/>
		<xs:maxInclusive value="100.0"/>
	</xs:restriction>
</xs:simpleType>

<xs:simpleType name="metricsType" >
	<xs:restriction base="xs:string">
		<xs:enumeration value="pairs"/>
		<xs:enumeration value="reads"/>
		<xs:enumeration value="unPaired"/>
		<xs:enumeration value="firstReadInPair"/>
		<xs:enumeration value="secondReadInPair"/>
		<xs:enumeration value="forwardReads"/>
		<xs:enumeration value="reverseReads"/>
	</xs:restriction>
</xs:simpleType>

<xs:simpleType name="UUID">
	<xs:restriction base="xs:string">
		<xs:pattern value="[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"/>
	</xs:restriction>
</xs:simpleType>

   <!-- attribute Group -->
	<!-- record program run information for each qProfiler2 input and itself -->
	<xs:attributeGroup name="executor">
		<xs:attribute type="xs:string" name="finishTime" use="required"/>
		<xs:attribute type="xs:string" name="startTime" use="required"/> 
		   
		<!-- fastqReport, vamReport and  vcfReport -->
		<xs:attribute type="UUID" name="uuid" use="optional"/>
		<xs:attribute type="nonEmptyString" name="file" use="optional"/>	
		<xs:attribute type="nonEmptyString" name="records_parsed" use="optional"/>
			
		<!-- vcfReport only but compulsary ??? -->
		<xs:attribute type="nonEmptyString" name="file_checksum" use="optional"/>   
	</xs:attributeGroup>

 	<!-- elements -->
	<!-- for summary:  <value name="maxLength">151</value> <value name="lostBasesPercent">49.93</value>-->
    <xs:element name="value" >
      <xs:complexType>
     	 <xs:simpleContent>
     		<xs:extension base="xs:string">
			<xs:attribute type="nonEmptyString" name="name" use="required"/>    	
     	</xs:extension>
   	</xs:simpleContent>
      </xs:complexType>
    </xs:element>

	<!-- not allow float -->     
	<xs:element name="tally">
	  <xs:complexType>
			<xs:attribute type="nonEmptyString" name="value" use="required"/> 
			<xs:attribute type="xs:integer" name="count" use="required"/>    	
	     	<xs:attribute type="percent" name="percent" use="optional"/>
	  </xs:complexType>
	</xs:element>

	<!-- not allow float -->     
	<xs:element name="closedBin">
	  <xs:complexType>
			<xs:attribute type="xs:integer" name="start" use="required"/> 
			<xs:attribute type="xs:integer" name="count" use="required"/>    	
	     	<xs:attribute type="xs:integer" name="end" use="required"/>
	  </xs:complexType>
	</xs:element>

   <xs:complexType name="cycleType">
	   <xs:sequence maxOccurs="unbounded">
		   <xs:element ref="tally"  maxOccurs="unbounded"/>	   
	   </xs:sequence>   
	   <xs:attribute type="xs:int" name="cycle" use="required"/> 
   </xs:complexType>
 

   
   <xs:complexType name="groupType">
	   <xs:choice>
			<xs:sequence> 
				<xs:element ref="value"  maxOccurs="unbounded"/>	
			</xs:sequence>
			<xs:sequence> 
				<xs:element ref="tally"  maxOccurs="unbounded"/>	
			</xs:sequence>
			<xs:sequence> 
				<xs:element ref="closedBin"  maxOccurs="unbounded"/>	
			</xs:sequence>			
			<xs:element name="baseCycle" maxOccurs="unbounded" type="cycleType"/>
		</xs:choice>
	 <xs:attribute type="xs:string" name="name" use="required"/> 
	  <xs:attribute type="xs:integer" name="count" use="optional"/>
	 <!--  xs:attribute type="xs:string" name="Type" use="optional"/  -->
  </xs:complexType>

    <xs:complexType name="SequenceMetricsType">
    
	     <xs:choice>
		     <xs:sequence>
			     <xs:element name="variableGroup" maxOccurs="unbounded" type="groupType"/>
		     </xs:sequence>
		     <xs:sequence>
			     <xs:element ref="value" maxOccurs="unbounded"/>
		     </xs:sequence>			
	     </xs:choice>
    
    <xs:attribute type="xs:integer" name="count" use="optional"/>
    <xs:attribute type="xs:string" name="name" use="optional"/>
   </xs:complexType>

  <xs:complexType name="SequenceMetricsGroup">
	<xs:sequence>	
		<xs:element name="readGroups" minOccurs="0"> <!--  maxOccurs="1" -->
			<xs:annotation>
				<xs:documentation>Metrics evaluated per-ReadGroup.</xs:documentation>
				</xs:annotation>
			<xs:complexType>
			  <xs:sequence>
			 	 <xs:element name="readGroup" minOccurs="1" maxOccurs="unbounded">
				 	 <xs:complexType>
					 	 <xs:sequence>
						 	 <xs:element name="sequenceMetrics" minOccurs="1" maxOccurs="unbounded" type="SequenceMetricsType"/>
					 	 </xs:sequence>
					 	 <xs:attribute type="xs:string" name="name" use="required"/> 	 	 
				 	 </xs:complexType>
  				 </xs:element>
			  </xs:sequence>
			</xs:complexType>	
			<xs:unique name="nametype1">
	      		<xs:selector xpath="."/>
	      		<xs:field xpath="@rgId"/> 			
      		</xs:unique>  		 
		</xs:element>
		<xs:element name="sequenceMetrics" minOccurs="0" maxOccurs="unbounded"  type="SequenceMetricsType">
			<xs:annotation>
				<xs:documentation>Metrics evaluated over all ReadGroups combined.</xs:documentation>
			</xs:annotation>			
		</xs:element>		
	</xs:sequence>
   </xs:complexType>  

	<!-- bam and vcf header -->
    <xs:complexType name="headerType">
    <xs:sequence>       
      <xs:element name="headerRecords" maxOccurs="unbounded"> 
	 	<xs:complexType>
		     <xs:sequence>
			     <xs:element name="record"    maxOccurs="unbounded" >
				 	<xs:complexType>
				        <xs:simpleContent>
				   			<xs:extension base="xs:string">
				        		<xs:attribute type="nonEmptyString" name="reId" use="optional"/>
				        		<xs:attribute type="nonEmptyString" name="name" use="optional"/>
				        	</xs:extension>
						</xs:simpleContent>		             	
				    </xs:complexType> 			     			     
			     </xs:element>			       
		     </xs:sequence>
		     <xs:attribute name="TAG" type="nonEmptyString" use="optional"/>
		     <xs:attribute name="FIELD" type="nonEmptyString" use="optional"/>
	    	 <xs:attribute name="description" type="nonEmptyString"/>	 			     
	    </xs:complexType>             	
        
        <!--the id attribute under each headRecords must unique if exists-->         
      	<xs:unique name="iduniq">
      		<xs:selector xpath="*"/>
      		<xs:field xpath="@reId"/>     			
      	</xs:unique>      	
             
      </xs:element>    	     
    </xs:sequence>
  </xs:complexType>   


  <xs:complexType name="bamReportType">
    <xs:sequence>
      <xs:element name="bamHeader" type="headerType"> 
      	<!--the Category attribute under each bamHeader must unique and exists-->         
      	<xs:key name="bamTagKey">
      		<xs:selector xpath=".//headerRecords"/>
      		<xs:field xpath="@TAG"/>     			
      	</xs:key>      	
      </xs:element>
      <xs:element name="bamSummary" type="SequenceMetricsGroup"/>
      <xs:element name="bamMetrics" >
	 	<xs:complexType>
		     <xs:sequence>
			     <xs:element name="QNAME" type="SequenceMetricsGroup"/>
  				 <xs:element name="FLAG"  type="SequenceMetricsGroup"/>     			     
			     <xs:element name="RNAME" type="SequenceMetricsGroup"/> 
  				 <xs:element name="POS"  type="SequenceMetricsGroup"/>     			     
			     <xs:element name="MAPQ" type="SequenceMetricsGroup"/> 
  				 <xs:element name="CIGAR"  type="SequenceMetricsGroup"/>     			     
			     <xs:element name="TLEN" type="SequenceMetricsGroup"/> 
  				 <xs:element name="SEQ"  type="SequenceMetricsGroup"/>     			     
			     <xs:element name="QUAL" type="SequenceMetricsGroup"/> 
			     <xs:element name="TAG" type="SequenceMetricsGroup"/> 			     
		     </xs:sequence>
	    </xs:complexType>             	          
      </xs:element>   	     
    </xs:sequence>
    <xs:attributeGroup ref="executor"/>
  </xs:complexType> 
  
   <xs:complexType name="vcfReportType">
    <xs:sequence>
      <xs:element name="vcfHeader" type="headerType">
      	<!--the Category attribute under each bamHeader must unique and exists-->         
      	<xs:key name="vcfFieldKey">
      		<xs:selector xpath=".//headerRecords"/>
      		<xs:field xpath="@FIELD"/>     			
      	</xs:key>      	     
      </xs:element> 
            
      <xs:element name="vcfMetrics">
	 	<xs:complexType>
		     <xs:sequence>
			     <xs:element name="sample" maxOccurs="unbounded">
				   <xs:complexType >
					<xs:sequence> 						
						<xs:element name="report" maxOccurs="unbounded">
						   <xs:complexType >
							<xs:sequence> 
								<xs:element name="sequenceMetrics" maxOccurs="unbounded" type="SequenceMetricsType"/>	
							</xs:sequence>
							 <xs:attribute type="xs:string" name="formats" use="optional"/> 
							 <xs:attribute type="xs:string" name="values" use="optional"/> 
						  </xs:complexType>			     			     
					     </xs:element> 
					</xs:sequence>
					 <xs:attribute type="xs:string" name="sid" use="required"/> 
				  </xs:complexType>			     			     
			     </xs:element> 
		     </xs:sequence>
	    </xs:complexType>             
      </xs:element>        	     
    </xs:sequence>
    <xs:attributeGroup ref="executor"/>
  </xs:complexType> 
  
   <xs:complexType name="fastqReportType">
    <xs:sequence>   
		<xs:element name="fastqMetrics" >
			<xs:complexType>
			   <xs:sequence>	
			     <xs:element name="QNAME" type="SequenceMetricsGroup"/>
				 <xs:element name="SEQ"  type="SequenceMetricsGroup"/>   			     
			     <xs:element name="QUAL" type="SequenceMetricsGroup"/>
			   </xs:sequence>
			</xs:complexType>
		</xs:element>        
    </xs:sequence>
    <xs:attributeGroup ref="executor"/>
   </xs:complexType>  



	<!-- main stream  -->
 <xs:element name="qProfiler">
	<xs:complexType>
	    <xs:choice maxOccurs="unbounded" minOccurs="0">
	        <xs:element name="bamReport" type="bamReportType"/>
	        <xs:element name="vcfReport" type="vcfReportType" />
	        <xs:element name="fastqReport" type="fastqReportType" />
		</xs:choice> 
		<xs:attributeGroup ref="executor"/>
		<xs:attribute type="xs:string" name="operatingSystem" use="optional"/>
	    <xs:attribute type="xs:string" name="user" use="optional"/>
	    <xs:attribute type="xs:string" name="version" use="optional"/>	 
	    <xs:attribute type="xs:string" name="validationSchema" use="optional"/>	    	
	</xs:complexType>
	
	<!--uuid attribute must be unique and exist  --> 	
	<xs:key name="uuidKey">
		<xs:selector xpath="*"/>
		<xs:field xpath="@uuid"/>		
	</xs:key>
 </xs:element>

</xs:schema>



