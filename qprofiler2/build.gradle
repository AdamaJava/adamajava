version = '2.0'
apply plugin: 'application'
mainClassName = 'org.qcmg.qprofiler2.QProfiler2'
def scriptname = 'qprofiler2'
def isExecutable = true

dependencies {
    configurations.compile.transitive = true
		
    compile project(':qcommon')
    compile project(':qpicard')
    compile project(':qio')

    compile 'com.github.samtools:htsjdk:2.14.1'
    compile 'net.sf.jopt-simple:jopt-simple:4.6'	
}

//create a fat jar file only for dispatching our qprofiler to outside
task fatJar(type: Jar ) {	
		baseName = project.name + '-all'
		version = "$version"
		from { configurations.compile.collect { it.isDirectory() ? it :  zipTree(it) } }
		with jar
		
		manifest {
			attributes 'Implementation-Title': baseName,
					   'Implementation-Version': "$version ($revision)",
					   'Built-By': System.properties['user.name'],
					   'Date': new java.util.Date().toString(),
					   'Main-Class' : mainClassName,
					   'Class-Path' : "${baseName}-${version}.jar"
		 }
		exclude 'META-INF/.RSA', 'META-INF/.SF','META-INF/*.DSA'		
}

//leave out: artifacts { archives fatJar }.
//we don't want to publish automaitcally at moment, but may require it in soon further. 
//create the fatJar unless we call this task
